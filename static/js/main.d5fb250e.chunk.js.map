{"version":3,"sources":["components/Form.js","components/Results.js","App.js","index.js"],"names":["Form","props","curs","baseCur","baseVal","setBaseCur","validateValueInput","className","name","onChange","e","target","value","base","other","type","pattern","Results","vals","changeBase","onClick","App","useState","setCurs","EUR","USD","JPY","rates","setRates","setVals","setBaseVal","notifDiv","useRef","message","setMessage","useEffect","newCurs","reduce","acc","cur","push","a","fetch","res","json","fetchRates","getExchangeVal","rate","toFixed","newVals","input","length","substr","parseInt","current","style","display","newBaseCur","ref","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5fb250e.chunk.js","sourcesContent":["import React from 'react'\nimport './Form.css'\n\nconst Form = ({ props }) => {\n    let { curs, baseCur, baseVal, setBaseCur, validateValueInput } = {...props}\n  \n    return (\n      <form className=\"form-wrapper\">\n      <select name=\"currency\" onChange={ e => setBaseCur(e.target.value) } value={baseCur}>\n          <option value={ curs.base }>{ curs.base }</option>\n          <option value={ curs.other[0] }>{ curs.other[0] }</option>\n          <option value={ curs.other[1] }>{ curs.other[1] }</option>\n        </select>\n      <input type=\"text\" pattern=\"/([0-9])/\" value={ baseVal } onChange={ e => validateValueInput(e) }/>\n    </form>\n    )\n}\n\nexport default Form","import React from 'react'\nimport './Results.css'\n\nconst Results = ({ props }) => {\n    let { curs, vals, changeBase } = {...props}\n  \n    return (\n      <div className=\"res-wrapper\">\n        <p onClick={ e => changeBase(curs.other[0]) }>\n          <span>{ vals[curs.other[0]] }</span>\n          <span>{ curs.other[0] }</span>\n        </p>\n        <p onClick={ e => changeBase(curs.other[1]) }>\n          <span>{ vals[curs.other[1]] }</span> \n          <span>{ curs.other[1] }</span>\n        </p>\n      </div>\n    )\n}\n\nexport default Results","import React, { useState, useEffect, useRef } from 'react'\nimport Form from './components/Form.js'\nimport Results from './components/Results.js'\nimport './App.css'\n\nconst App = () => {\n  const [curs, setCurs] = useState({ base: \"EUR\", other: [\"USD\", \"JPY\"] })\n  const [rates, setRates] = useState({ EUR: null, USD: null, JPY: null })\n  const [vals, setVals] = useState({ EUR: 0, USD: 0, JPY: 0 })\n  const [baseCur, setBaseCur] = useState(\"EUR\")\n  const [baseVal, setBaseVal] = useState(1)\n\n  const notifDiv = useRef(null)\n  const [message, setMessage] = useState(\"\")\n\n  useEffect(() => {\n    let newCurs = [\"EUR\", \"USD\", \"JPY\"].reduce( (acc, cur) => {\n      cur === baseCur ? acc.base = cur : acc.other.push(cur)\n      return acc\n    }, { \"base\": null, \"other\": [] })\n\n    setCurs(newCurs)\n  }, [baseCur])\n\n  useEffect(() => {\n    async function fetchRates(curs, setRates) {\n      let { base, other } = curs\n      let res = await fetch(`https://api.exchangeratesapi.io/latest?base=${ base }`)\n      res = await res.json()\n      let rates = {\n        [base]: 1,\n        [other[0]]: res.rates[other[0]],\n        [other[1]]: res.rates[other[1]]\n      }\n      setRates(rates)\n    }\n\n    fetchRates(curs, setRates)\n  }, [curs])\n\n  useEffect(() => {\n    function getExchangeVal(rate) {\n      return (baseVal * rate).toFixed(2)\n    }\n    \n    let newVals = {\n      [curs.base]: baseVal,\n      [curs.other[0]]: getExchangeVal(rates[curs.other[0]]),\n      [curs.other[1]]: getExchangeVal(rates[curs.other[1]]),\n    }\n    setVals(newVals)\n  }, [rates, curs, baseVal])\n  \n  function changeBase(newBaseCur) {\n    setBaseCur(newBaseCur)\n    setBaseVal(vals[newBaseCur])\n  }\n  \n  function validateValueInput(e) {\n    let input = e.target.value === \"\" ? \"0\" : e.target.value \n \n    if(input.length > 1 && input[0] === \"0\") {\n      input = input.substr(1)  // inputs shouldn't start with zero\n    } \n    \n    if(input !== \"0\" && !parseInt(input)) {\n      setMessage(\"Only numbers please\")\n      notifDiv.current.style.display = \"block\"\n      setBaseVal(0)\n    } else if (input.length > 10) {\n      setMessage(\"Max. 10 characters\")\n      notifDiv.current.style.display = \"block\" \n    } else {\n      setBaseVal(parseInt(input))\n      notifDiv.current.style.display = \"none\"\n      setMessage(\"\")\n    }\n  }\n\n  return (\n    <div className=\"app-wrapper\">\n      <main className=\"app-converter\">\n        <Form props={{ curs, baseCur, baseVal, setBaseCur, validateValueInput }}/>\n        <Results props={{ curs, vals, changeBase }} />\n        <div ref={notifDiv} className=\"app-invalid-input\">{ message }</div>\n      </main>\n    </div>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}